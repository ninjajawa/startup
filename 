[1mdiff --git a/handler/user.go b/handler/user.go[m
[1mindex 3e92d69..048ecd1 100644[m
[1m--- a/handler/user.go[m
[1m+++ b/handler/user.go[m
[36m@@ -3,6 +3,7 @@[m [mpackage handler[m
 import ([m
 	"bwastartup/helper"[m
 	"bwastartup/user"[m
[32m+[m	[32m"fmt"[m
 	"net/http"[m
 [m
 	"github.com/gin-gonic/gin"[m
[36m@@ -103,3 +104,47 @@[m [mfunc (h *userHandler) EmailCheckAvailable(c *gin.Context) {[m
 	c.JSON(http.StatusOK, response)[m
 [m
 }[m
[32m+[m
[32m+[m[32mfunc (h *userHandler) UploadAvatar(c *gin.Context) {[m
[32m+[m
[32m+[m	[32mfile, err := c.FormFile("avatar")[m
[32m+[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mdata := gin.H{"is_upload": false}[m
[32m+[m		[32mresponse := helper.APIResponse("Failed to upload avatar image", http.StatusBadRequest, "error", data)[m
[32m+[m
[32m+[m		[32mc.JSON(http.StatusBadRequest, response)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// harusnya dapet dari jwt tpi ini hanya contoh[m
[32m+[m
[32m+[m	[32muserId := 2[m
[32m+[m
[32m+[m	[32mpath := fmt.Sprintf("images/%d-%s", userId, file.Filename)[m
[32m+[m
[32m+[m	[32merr = c.SaveUploadedFile(file, path)[m
[32m+[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mdata := gin.H{"is_upload": false}[m
[32m+[m		[32mresponse := helper.APIResponse("Failed to upload avatar image", http.StatusBadRequest, "error", data)[m
[32m+[m
[32m+[m		[32mc.JSON(http.StatusBadRequest, response)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m_, err = h.userService.SaveAvatar(userId, path)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mdata := gin.H{"is_upload": false}[m
[32m+[m		[32mresponse := helper.APIResponse("Failed to upload avatar image", http.StatusBadRequest, "error", data)[m
[32m+[m
[32m+[m		[32mc.JSON(http.StatusBadRequest, response)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mdata := gin.H{"is_upload": true}[m
[32m+[m	[32mresponse := helper.APIResponse("Success to upload avatar image", http.StatusOK, "success", data)[m
[32m+[m
[32m+[m	[32mc.JSON(http.StatusOK, response)[m
[32m+[m	[32mreturn[m
[32m+[m[32m}[m
[1mdiff --git a/main.go b/main.go[m
[1mindex 6ced2b4..f6b72c5 100644[m
[1m--- a/main.go[m
[1m+++ b/main.go[m
[36m@@ -23,6 +23,8 @@[m [mfunc main() {[m
 [m
 	userHandler := handler.NewUserHandler(userService)[m
 [m
[32m+[m	[32muserService.SaveAvatar(1, "images/1-profile.png")[m
[32m+[m
 	router := gin.Default()[m
 [m
 	api := router.Group("/api/v1")[m
[36m@@ -30,6 +32,7 @@[m [mfunc main() {[m
 	api.POST("/users", userHandler.RegisterUser)[m
 	api.POST("/sessions", userHandler.Login)[m
 	api.POST("/email_checker", userHandler.EmailCheckAvailable)[m
[32m+[m	[32mapi.POST("/avatars", userHandler.UploadAvatar)[m
 [m
 	router.Run()[m
 }[m
[1mdiff --git a/user/repository.go b/user/repository.go[m
[1mindex 3b7d79a..6be94db 100644[m
[1m--- a/user/repository.go[m
[1m+++ b/user/repository.go[m
[36m@@ -5,6 +5,8 @@[m [mimport "gorm.io/gorm"[m
 type Repository interface {[m
 	Save(user User) (User, error)[m
 	FindByEmail(email string) (User, error)[m
[32m+[m	[32mFindById(ID int) (User, error)[m
[32m+[m	[32mUpdate(user User) (User, error)[m
 }[m
 [m
 type repository struct {[m
[36m@@ -33,3 +35,23 @@[m [mfunc (r *repository) FindByEmail(email string) (User, error) {[m
 [m
 	return user, nil[m
 }[m
[32m+[m
[32m+[m[32mfunc (r *repository) FindById(ID int) (User, error) {[m
[32m+[m	[32mvar user User[m
[32m+[m	[32merr := r.db.Where("id = ?", ID).Find(&user).Error[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn user, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn user, nil[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (r *repository) Update(user User) (User, error) {[m
[32m+[m	[32merr := r.db.Save(&user).Error[m
[32m+[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn user, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn user, nil[m
[32m+[m[32m}[m
[1mdiff --git a/user/service.go b/user/service.go[m
[1mindex 4ca9313..e32b1fa 100644[m
[1m--- a/user/service.go[m
[1m+++ b/user/service.go[m
[36m@@ -10,6 +10,7 @@[m [mtype Service interface {[m
 	RegisterUser(input RegisterUserInput) (User, error)[m
 	Login(input LoginInput) (User, error)[m
 	IsEmailAvailable(input CheckEmailInput) (bool, error)[m
[32m+[m	[32mSaveAvatar(Id int, filelocation string) (User, error)[m
 }[m
 [m
 type service struct {[m
[36m@@ -78,3 +79,21 @@[m [mfunc (s *service) IsEmailAvailable(input CheckEmailInput) (bool, error) {[m
 [m
 	return false, nil[m
 }[m
[32m+[m
[32m+[m[32mfunc (s *service) SaveAvatar(ID int, filelocation string) (User, error) {[m
[32m+[m
[32m+[m	[32muser, err := s.repository.FindById(ID)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn user, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32muser.AvatarFileName = filelocation[m
[32m+[m
[32m+[m	[32mupdateUser, err := s.repository.Update(user)[m
[32m+[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn updateUser, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn updateUser, nil[m
[32m+[m[32m}[m
